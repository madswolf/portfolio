---
import type { HTMLAttributes } from 'astro/types';

interface Props {
	tags: string[] | undefined;
}

const { tags } = Astro.props;

function tagToColor(tag:string){
	switch(tag.toLocaleLowerCase()){
		case 'c#':
			return {color:"#01C27E", backgroundColor:"#01c27e1a"};
		case 'react':
			return {color:"#5cc8ff", backgroundColor:"#5cc8ff1a"};
		case 'javascript':
			return {color:"#EED91B", backgroundColor:"#F4E76E1a"};
		case 'typescript':
			return {color:"#00b8d9", backgroundColor:"#00b8d91a"};
		case 'python':
			return {color:"#62D61F", backgroundColor:"#62D61F1a"};
		case 'java':
			return {color:"#9B7746", backgroundColor:"#9B77461a"};	
		case 'f#':
			return {color:"#01C27E", backgroundColor:"#01c27e1a"};
		case 'sql':
			return {color:"#027BCE", backgroundColor:"#4BB3FD1A"};
		case 'rust':
			return {color:"#f46623", backgroundColor:"#f466231a"};
		case 'c':
			return {color:"#5E6572", backgroundColor:"#5E65721a"};
		case '3d modeling':
			return {color:"#EE5963", backgroundColor:"#EE59631a"}
		case 'robotics':
			return {color:"#E6AA68", backgroundColor:"#E6AA681a"}
	    case 'graphics':
			return {color:"#96380D", backgroundColor:"#96380D1a"}
		}
}


const container = tags?.map((tag) => ({tag:tag, colors:tagToColor(tag) }))

---

<div>
    {
		container?.map((container) => (
			<span style=`color:${container.colors?.color}; background-color:${container.colors?.backgroundColor} `>
			{container.tag}
			</span>
		))
	}
</div>
<style>
	div {
		display: flexbox;
		padding: 5px;
	}
	span {
		font-size: large;
		display: inline-block;
		border-radius: 5px;
  		padding: 5px 10px;
		margin: 5px;
	}
</style>
